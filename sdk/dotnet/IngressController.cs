// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ChartIngressNginx
{
    /// <summary>
    /// Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer
    /// </summary>
    [ChartIngressNginxResourceType("chart-ingress-nginx:index:IngressController")]
    public partial class IngressController : Pulumi.ComponentResource
    {
        /// <summary>
        /// Detailed information about the status of the underlying Helm deployment.
        /// </summary>
        [Output("status")]
        public Output<Outputs.ReleaseStatus> Status { get; private set; } = null!;


        /// <summary>
        /// Create a IngressController resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IngressController(string name, IngressControllerArgs? args = null, ComponentResourceOptions? options = null)
            : base("chart-ingress-nginx:index:IngressController", name, args ?? new IngressControllerArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class IngressControllerArgs : Pulumi.ResourceArgs
    {
        [Input("controller")]
        public Input<Inputs.ControllerArgs>? Controller { get; set; }

        /// <summary>
        /// Optional Helm Chart release metadata (name, version, chart options, etc).
        /// </summary>
        [Input("helmOptions")]
        public Input<Inputs.ReleaseArgs>? HelmOptions { get; set; }

        public IngressControllerArgs()
        {
        }
    }
}
